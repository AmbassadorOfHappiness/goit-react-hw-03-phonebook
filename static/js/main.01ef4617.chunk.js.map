{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","index.js"],"names":["module","exports","ContactForm","state","name","number","handleChange","e","target","value","setState","findByName","contactName","props","contacts","some","handleSubmit","preventDefault","onAddContact","className","style","formInner","onSubmit","this","type","onChange","pattern","title","required","Component","Filter","ContactList","onRemoveContact","map","contact","onClick","id","App","filter","handleInputChange","currentTarget","addContact","task","cont","includes","alert","length","uuid","prevState","deleteContact","contactId","getVisibleContacts","toLowerCase","localcontacts","JSON","parse","localStorage","getItem","prevProps","setItem","stringify","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.01ef4617.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formInner\":\"ContactForm_formInner__23u-1\"};","import { Component } from 'react';\r\nimport style from '../ContactForm/ContactForm.module.css'\r\n\r\nclass ContactForm extends Component {\r\n    state = {\r\n        name: '',\r\n        number: '',\r\n    };\r\n\r\n    handleChange = e => {\r\n        const { name, value } = e.target;\r\n        this.setState({\r\n        [name]: value,\r\n        });\r\n    };\r\n\r\n      findByName = contactName => {\r\n    return this.props.contacts.some(({ name }) => name === contactName);\r\n  };\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.onAddContact({ ...this.state });\r\n        this.setState({ name: \"\", number: \"\" });\r\n    };\r\n   \r\n    render() {\r\n        return (\r\n            <form className={style.formInner} onSubmit={this.handleSubmit}>\r\n                <label>Name </label>\r\n                <input\r\n                    className='input'\r\n                    type=\"text\"\r\n                    value={this.state.name}\r\n                    name=\"name\"\r\n                    onChange={ this.handleChange }\r\n                />\r\n                <br />\r\n                <label>Number </label>\r\n                <input\r\n                    className='input'\r\n                    type=\"tel\"\r\n                    value={this.state.number}\r\n                    name=\"number\"\r\n                    onChange={ this.handleChange }\r\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                    title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                    required\r\n                />\r\n                <button className='button' type=\"submit\">Add contact</button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ContactForm;","import React from 'react';\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n    return (\r\n        <label>Find contacts by name\r\n            <input\r\n                className='input'\r\n                type=\"text\"\r\n                name=\"filter\"\r\n                value={value}\r\n                onChange={onChange}\r\n                />\r\n        </label>\r\n    )\r\n}\r\nexport default Filter;","import React from 'react';\r\n// import style from '../ContactList/ContactList.module.css';\r\n// import {button} from '../ContactForm/ContactForm.module.css';\r\n\r\nconst ContactList = ({ contacts, onRemoveContact }) => (\r\n  <ul>\r\n    {contacts.map((contact) => (\r\n      <li key={contact.id}>\r\n        {contact.name + \" : \" + contact.number}\r\n        {\r\n            <button\r\n                className='button'  \r\n                type=\"button\"\r\n                name=\"delete\"\r\n                onClick={() => onRemoveContact(contact.id)}\r\n            >\r\n                Delete\r\n            </button>\r\n        }\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nexport default ContactList;","import './App.css';\r\nimport { Component } from 'react';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nimport ContactForm from './components/ContactForm/ContactForm'\r\nimport Filter from './components/Filter/Filter'\r\nimport ContactList from './components/ContactList/ContactList'\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [\r\n      // {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\r\n      // {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\r\n      // {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\r\n      // {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\r\n    ],\r\n    filter: '',\r\n  }\r\n\r\n    componentDidMount() {\r\n    const localcontacts = JSON.parse(localStorage.getItem(\"contacts\"));\r\n\r\n    if (localcontacts) {\r\n      this.setState({ contacts: localcontacts });\r\n    } \r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const { contacts } = this.state;\r\n\r\n    if (prevProps.contacts !== contacts) {\r\n      localStorage.setItem(\"contacts\", JSON.stringify(contacts));\r\n    }\r\n  }\r\n  \r\n  handleInputChange = e => {\r\n    // console.log(e.currentTarget.value);\r\n    this.setState({ filter: e.currentTarget.value });\r\n  }\r\n\r\n  addContact = (task) => {\r\n    const searchSameName = this.state.contacts\r\n      .map((cont) => cont.name)\r\n      .includes(task.name);\r\n\r\n    if (searchSameName) {\r\n      alert(`${task.name} is already in contacts`);\r\n    } else if (task.name.length === 0) {\r\n      alert(\"Fields must be filled!\");\r\n    } else {\r\n      const contact = {\r\n        ...task,\r\n        id: uuid(),\r\n      };\r\n\r\n      this.setState((prevState) => ({\r\n        contacts: [...prevState.contacts, contact],\r\n      }));\r\n    }\r\n  };\r\n\r\n  deleteContact = (contactId) => {\r\n    this.setState((prevState) => {\r\n      return {\r\n        contacts: prevState.contacts.filter(({ id }) => id !== contactId),\r\n      };\r\n    });\r\n  };\r\n\r\n  getVisibleContacts = () => {\r\n    const { contacts, filter } = this.state;\r\n    return contacts.filter((contacts) =>\r\n      contacts.name.toLowerCase().includes(filter.toLowerCase())\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const visibleContacts = this.getVisibleContacts();\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <h1 className=\"title\">Phonebook</h1>\r\n        <ContactForm onAddContact={this.addContact} />\r\n        <h2 className=\"title\">Contacts</h2>\r\n        <Filter value={this.state.filter} onChange={this.handleInputChange} />\r\n        <ContactList\r\n          contacts={visibleContacts}\r\n          onRemoveContact={this.deleteContact}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n// import reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n// reportWebVitals();\r\n"],"sourceRoot":""}